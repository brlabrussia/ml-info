# Generated by Django 3.0.10 on 2020-11-23 13:21

import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cbr_url', models.URLField(blank=True)),
                ('banki_url', models.URLField(blank=True)),
                ('full_name', models.TextField(blank=True)),
                ('name', models.TextField(blank=True)),
                ('reg_number', models.TextField(blank=True)),
                ('registration_date', models.DateTimeField(blank=True, null=True)),
                ('ogrn', models.TextField(blank=True)),
                ('ogrn_date', models.DateTimeField(blank=True, null=True)),
                ('bik', models.TextField(blank=True)),
                ('statutory_address', models.TextField(blank=True)),
                ('actual_address', models.TextField(blank=True)),
                ('tel_number', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('statutory_update', models.DateTimeField(blank=True, null=True)),
                ('authorized_capital', models.BigIntegerField(blank=True, null=True)),
                ('authorized_capital_date', models.DateTimeField(blank=True, null=True)),
                ('license_info', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('license_info_file', models.URLField(blank=True)),
                ('deposit_insurance_system', models.BooleanField(blank=True, null=True)),
                ('english_name', models.TextField(blank=True)),
                ('bank_subsidiaries', models.TextField(blank=True)),
                ('bank_agencies', models.BigIntegerField(blank=True, null=True)),
                ('additional_offices', models.BigIntegerField(blank=True, null=True)),
                ('operating_cash_desks', models.BigIntegerField(blank=True, null=True)),
                ('operating_offices', models.BigIntegerField(blank=True, null=True)),
                ('mobile_cash_desks', models.BigIntegerField(blank=True, null=True)),
                ('info_sites', django.contrib.postgres.fields.ArrayField(base_field=models.URLField(), blank=True, null=True, size=None)),
            ],
        ),
        migrations.CreateModel(
            name='Deposit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('banki_url', models.URLField(blank=True)),
                ('banki_bank_url', models.URLField(blank=True)),
                ('deposit_amount', models.TextField(blank=True)),
                ('deposit_currency', models.TextField(blank=True)),
                ('deposit_term', models.TextField(blank=True)),
                ('interest_payment', models.TextField(blank=True)),
                ('capitalization', models.TextField(blank=True)),
                ('special_contribution', models.TextField(blank=True)),
                ('is_staircase_contribution', models.BooleanField(default=False)),
                ('special_conditions', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('replenishment_ability', models.IntegerField(blank=True, null=True)),
                ('replenishment_description', models.TextField(blank=True)),
                ('min_irreducible_balance', models.TextField(blank=True)),
                ('early_dissolution', models.TextField(blank=True)),
                ('early_dissolution_description', models.TextField(blank=True)),
                ('auto_prolongation', models.IntegerField(blank=True, null=True)),
                ('auto_prolongation_description', models.TextField(blank=True)),
                ('rates_table', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('rates_comments', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('bank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deposits', to='banks.Bank')),
            ],
        ),
        migrations.CreateModel(
            name='DebitCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('banki_url', models.URLField(blank=True)),
                ('banki_bank_url', models.URLField(blank=True)),
                ('name', models.TextField(blank=True)),
                ('images', django.contrib.postgres.fields.ArrayField(base_field=models.URLField(), blank=True, null=True, size=None)),
                ('summary', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('borrower_age', models.TextField(blank=True)),
                ('borrower_registration', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('expert_positive', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('expert_negative', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('expert_restrictions', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('debit_type', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('technological_features', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('debit_cashback', models.TextField(blank=True)),
                ('debit_cashback_description', models.TextField(blank=True)),
                ('debit_bonuses', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('interest_accrual', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('service_cost', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('cash_withdrawal', models.TextField(blank=True)),
                ('cash_pickup_point', models.TextField(blank=True)),
                ('foreign_cash_withdrawal', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('foreign_cash_pickup_point', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('operations_limit', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('additional_information', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('bank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='debit_cards', to='banks.Bank')),
            ],
        ),
        migrations.CreateModel(
            name='CreditCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('banki_url', models.URLField(blank=True)),
                ('banki_bank_url', models.URLField(blank=True)),
                ('name', models.TextField(blank=True)),
                ('images', django.contrib.postgres.fields.ArrayField(base_field=models.URLField(), blank=True, null=True, size=None)),
                ('summary', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('borrower_age', models.TextField(blank=True)),
                ('borrower_registration', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('borrower_income', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('borrower_experience', models.TextField(blank=True)),
                ('expert_positive', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('expert_negative', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('expert_restrictions', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('credit_limit', models.TextField(blank=True)),
                ('credit_limit_description', models.TextField(blank=True)),
                ('credit_period', models.TextField(blank=True)),
                ('grace_period', models.TextField(blank=True)),
                ('percentage_grace', models.TextField(blank=True)),
                ('percentage_grace_description', models.TextField(blank=True)),
                ('percentage_credit', models.TextField(blank=True)),
                ('percentage_credit_description', models.TextField(blank=True)),
                ('repayment', models.TextField(blank=True)),
                ('repayment_description', models.TextField(blank=True)),
                ('credit_type', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('technological_features', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('credit_cashback', models.TextField(blank=True)),
                ('credit_cashback_description', models.TextField(blank=True)),
                ('credit_bonuses', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('interest_accrual', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('service_cost', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('cash_withdrawal', models.TextField(blank=True)),
                ('cash_pickup_point', models.TextField(blank=True)),
                ('foreign_cash_withdrawal', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('foreign_cash_pickup_point', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('operations_limit', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('additional_information', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('own_funds', models.BooleanField(blank=True, null=True)),
                ('bank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credit_cards', to='banks.Bank')),
            ],
        ),
        migrations.CreateModel(
            name='ConsumerCredit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('banki_url', models.URLField(blank=True)),
                ('banki_bank_url', models.URLField(blank=True)),
                ('account_currency', models.TextField(blank=True)),
                ('loan_purpose', models.TextField(blank=True)),
                ('loan_purpose_description', models.TextField(blank=True)),
                ('is_subjected_to_fee', models.BooleanField(blank=True, null=True)),
                ('loan_security', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('credit_insurance', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('credit_insurance_description', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('additional_information', models.TextField(blank=True)),
                ('rates_table', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('borrowers_category', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('borrowers_age_men', models.TextField(blank=True)),
                ('borrowers_age_women', models.TextField(blank=True)),
                ('work_experience', models.TextField(blank=True)),
                ('borrowers_registration', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('borrowers_income_description', models.TextField(blank=True)),
                ('borrowers_income_tip', models.TextField(blank=True)),
                ('borrowers_income_documents', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('borrowers_documents', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('application_consider_time', models.TextField(blank=True)),
                ('application_consider_time_description', models.TextField(blank=True)),
                ('credit_decision_time', models.TextField(blank=True)),
                ('loan_processing_terms', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('loan_delivery_type', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('repayment_procedure', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('early_repayment_full', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('early_repayment_partial', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('obligations_violation', models.TextField(blank=True)),
                ('payment_method', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('bank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consumer_credits', to='banks.Bank')),
            ],
        ),
        migrations.CreateModel(
            name='BankSubsidiary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reg_number', models.TextField(blank=True)),
                ('name', models.TextField(blank=True)),
                ('reg_date', models.DateTimeField(blank=True, null=True)),
                ('address', models.TextField(blank=True)),
                ('bank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subsidiaries', to='banks.Bank')),
            ],
        ),
        migrations.CreateModel(
            name='BankCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pay_system', models.TextField(blank=True)),
                ('emission', models.BooleanField(blank=True, null=True)),
                ('acquiring', models.BooleanField(blank=True, null=True)),
                ('bank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cards', to='banks.Bank')),
            ],
        ),
        migrations.CreateModel(
            name='BankAgency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True)),
                ('foundation_date', models.DateTimeField(blank=True, null=True)),
                ('address', models.TextField(blank=True)),
                ('bank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agencies', to='banks.Bank')),
            ],
        ),
        migrations.CreateModel(
            name='AutoCredit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('banki_url', models.URLField(blank=True)),
                ('banki_bank_url', models.URLField(blank=True)),
                ('name', models.TextField(blank=True)),
                ('auto_seller', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('auto_kind', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('auto_type', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('auto_age', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('autocredit_min_time', models.TextField(blank=True)),
                ('autocredit_max_time', models.TextField(blank=True)),
                ('autocredit_currency', models.TextField(blank=True)),
                ('autocredit_amount_min', models.TextField(blank=True)),
                ('autocredit_amount_max', models.TextField(blank=True)),
                ('autocredit_amount_description', models.TextField(blank=True)),
                ('min_down_payment', models.FloatField(blank=True, null=True)),
                ('loan_rate_min', models.FloatField(blank=True, null=True)),
                ('loan_rate_max', models.FloatField(blank=True, null=True)),
                ('loan_rate_description', models.TextField(blank=True)),
                ('autocredit_comission', models.TextField(blank=True)),
                ('early_moratorium_repayment', models.TextField(blank=True)),
                ('prepayment_penalty', models.TextField(blank=True)),
                ('insurance_necessity', models.BooleanField(blank=True, null=True)),
                ('borrowers_age', models.TextField(blank=True)),
                ('borrowers_age_description', models.TextField(blank=True)),
                ('income_proof', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('registration_requirements', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('last_work_experience', models.TextField(blank=True)),
                ('full_work_experience', models.TextField(blank=True)),
                ('additional_conditions', models.TextField(blank=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('has_repurchase', models.BooleanField(default=False)),
                ('bank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='auto_credits', to='banks.Bank')),
            ],
        ),
    ]
