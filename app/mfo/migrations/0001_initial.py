# Generated by Django 3.0.10 on 2020-09-17 18:16

import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import mfo.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Lender',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('scraped_from', django.contrib.postgres.fields.ArrayField(base_field=models.URLField(), size=None)),
                ('trademark', models.TextField(blank=True, help_text='Торговая марка')),
                ('name_short', models.TextField(blank=True, help_text='Сокращенное наименование')),
                ('name_full', models.TextField(blank=True, help_text='Полное наименование')),
                ('logo_origin_url', models.URLField(blank=True, help_text='Ссылка на источник логотипа')),
                ('logo_image', models.ImageField(blank=True, help_text='Логотип', upload_to=mfo.models.logo_path)),
                ('is_legal', models.BooleanField(default=False, help_text='Легальная МФО (есть в реестре ЦБ)')),
                ('cbr_created_at', models.DateTimeField(blank=True, help_text='Дата внесения в реестр ЦБ', null=True)),
                ('type', models.TextField(blank=True, help_text='Вид МФО')),
                ('cbrn', models.CharField(blank=True, help_text='Регномер в ЦБ', max_length=13, null=True, unique=True, validators=[django.core.validators.RegexValidator('\\d{13}$')])),
                ('ogrn', models.CharField(blank=True, help_text='ОГРН', max_length=13, null=True, unique=True, validators=[django.core.validators.RegexValidator('\\d{13}$')])),
                ('inn', models.CharField(blank=True, help_text='ИНН', max_length=10, null=True, unique=True, validators=[django.core.validators.RegexValidator('\\d{10}$')])),
                ('website', models.URLField(blank=True, help_text='Вебсайт')),
                ('email', models.EmailField(blank=True, help_text='Электронная почта', max_length=254)),
                ('socials', django.contrib.postgres.fields.ArrayField(base_field=models.URLField(), blank=True, help_text='Соцсети', null=True, size=None)),
                ('address', models.TextField(blank=True, help_text='Адрес')),
                ('head_name', models.TextField(blank=True, help_text='Руководитель')),
                ('decision_speed', models.TextField(blank=True, help_text='Скорость рассмотрения заявки')),
                ('payment_speed', models.TextField(blank=True, help_text='Скорость выплаты')),
                ('amount_min', models.PositiveIntegerField(blank=True, help_text='Минимальная сумма займа', null=True)),
                ('amount_max', models.PositiveIntegerField(blank=True, help_text='Максимальная сумма займа', null=True)),
                ('overpayment_day', models.FloatField(blank=True, help_text='Переплата за день', null=True)),
                ('overpayment_full', models.FloatField(blank=True, help_text='Переплата за весь срок', null=True)),
                ('decline_reasons', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, help_text='Причины отказа', null=True, size=None)),
                ('id_meta', models.IntegerField(blank=True, help_text='ID Метарейтинга', null=True)),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Loan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.TextField(help_text='Название займа')),
                ('banki_url', models.URLField(help_text='Ссылка на Банки.ру', unique=True)),
                ('banki_updated_at', models.DateTimeField(blank=True, help_text='Дата актуализации на Банки.ру', null=True)),
                ('purposes', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, help_text='Цель займа', null=True, size=None)),
                ('amount_min', models.PositiveIntegerField(help_text='Минимальная сумма займа')),
                ('amount_max', models.PositiveIntegerField(help_text='Максимальная сумма займа')),
                ('amount_note', models.TextField(blank=True, help_text='Допинфа по сумме займа')),
                ('rate_min', models.FloatField(help_text='Минимальная ставка в день')),
                ('rate_max', models.FloatField(help_text='Максимальная ставка в день')),
                ('rate_note', models.TextField(blank=True, help_text='Допинфа по ставке')),
                ('period_min', models.PositiveIntegerField(help_text='Минимальный срок займа')),
                ('period_max', models.PositiveIntegerField(help_text='Максимальный срок займа')),
                ('period_note', models.TextField(blank=True, help_text='Допинфа по срокам')),
                ('collateral', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, help_text='Обеспечение', null=True, size=None)),
                ('borrower_categories', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, help_text='Категории заемщиков', null=True, size=None)),
                ('borrower_age', models.TextField(blank=True, help_text='Возраст заемщика')),
                ('borrower_registration', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, help_text='Регистрация заемщика', null=True, size=None)),
                ('borrower_documents', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, help_text='Документы заемщика', null=True, size=None)),
                ('application_process', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, help_text='Оформление займа', null=True, size=None)),
                ('payment_speed', models.TextField(blank=True, help_text='Срок выдачи')),
                ('payment_forms', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, help_text='Форма выдачи', null=True, size=None)),
                ('payment_forms_note', models.TextField(blank=True, help_text='Допинфа по форме выдачи')),
                ('repayment_process', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, help_text='Порядок погашения', null=True, size=None)),
                ('repayment_process_note', models.TextField(blank=True, help_text='Допинфа по порядку погашения')),
                ('repayment_forms', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, help_text='Способ оплаты', null=True, size=None)),
                ('lender_logo', models.URLField(blank=True, help_text='Логотип организации')),
                ('lender_trademark', models.TextField(blank=True, help_text='Торговая марка')),
                ('lender_address', models.TextField(blank=True, help_text='Адрес')),
                ('lender_head_name', models.TextField(blank=True, help_text='Руководитель')),
                ('lender_cbrn', models.CharField(blank=True, help_text='Регномер в ЦБ', max_length=13, validators=[django.core.validators.RegexValidator('\\d{13}$')])),
                ('lender_ogrn', models.CharField(blank=True, help_text='ОГРН', max_length=13, validators=[django.core.validators.RegexValidator('^\\d{13}$')])),
                ('lender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='loans', to='mfo.Lender')),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('origin_url', models.URLField()),
                ('name', models.TextField(blank=True)),
                ('file', models.FileField(upload_to=mfo.models.document_path)),
                ('lender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='mfo.Lender')),
            ],
        ),
    ]
